
import javax.swing.ButtonGroup;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.Timer;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Joshua
 */
public class AskForAddDetails extends javax.swing.JDialog {

    /**
     * Creates new form AskForAddDetails
     */
    private Timer timer;
    private ButtonGroup bGroup1 = new ButtonGroup();
    private JFrame parent;
    private journalEntry je;
    private boolean isLoad = false;
    private int project_key;

    public AskForAddDetails(JFrame parent, journalEntry je) {
        
        super(parent, "Enter Initial Details", true);
        this.je = je;
        initComponents();
        pack();
        setLocationRelativeTo(parent);
        this.parent = parent;

        bGroup1.add(button1);
        bGroup1.add(button3);
        
        

        JPopupMenu.setDefaultLightWeightPopupEnabled(false);
        timer = new Timer(100, e -> jMonthChooser1.getParent().repaint());
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMonthChooser1 = new com.toedter.calendar.JMonthChooser();
        jLabel3 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        button1 = new javax.swing.JRadioButton();
        button3 = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frame.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add details.");
        setBackground(new java.awt.Color(153, 153, 153));
        setMinimumSize(new java.awt.Dimension(452, 399));
        setUndecorated(true);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(null);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        label1.setText("INPUT THE DETAILS");
        getContentPane().add(label1);
        label1.setBounds(80, 30, 310, 20);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Project Name:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 70, 134, 17);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.setText("Enter a company name....");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(60, 140, 320, 23);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Start of accounting (Month):");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(60, 250, 217, 17);

        jMonthChooser1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jMonthChooser1.setMonth(7);
        jMonthChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMonthChooser1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMonthChooser1MouseExited(evt);
            }
        });
        jMonthChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jMonthChooser1PropertyChange(evt);
            }
        });
        getContentPane().add(jMonthChooser1);
        jMonthChooser1.setBounds(60, 270, 125, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Start of accounting (Year):");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 300, 217, 17);

        jYearChooser1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(jYearChooser1);
        jYearChooser1.setBounds(60, 320, 68, 22);

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(60, 350, 75, 23);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Reporting Period:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(60, 170, 180, 17);

        button1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        button1.setText("Annual");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        getContentPane().add(button1);
        button1.setBounds(60, 190, 90, 22);

        button3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        button3.setText("Interval");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });
        getContentPane().add(button3);
        button3.setBounds(220, 190, 120, 22);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(30, 57, 400, 3);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(30, 380, 390, 3);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField2.setText("Enter project name...");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2);
        jTextField2.setBounds(60, 90, 320, 23);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Company Name:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 120, 134, 17);

        jButton2.setText("Load");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(150, 350, 72, 23);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.setEditable(false);
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Please pick a reporting period.");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(60, 220, 240, 23);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    public int getProjectId() {
        return project_key;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            String companyName = jTextField1.getText().trim();
            if (companyName.isEmpty() || companyName.equals("Enter a company name....")) {
                throw new IllegalArgumentException("Please enter company name!");

            }
            String projectName = jTextField2.getText().trim();
            if (projectName.isEmpty() || projectName.equals("Enter project name...")) {
                throw new IllegalArgumentException("Please enter project name!");

            }
            String accountingPeriod = null;

            if (button1.isSelected()) {
                accountingPeriod = "Annual Reporting";
            } else if (button3.isSelected()) {
                accountingPeriod = "Interval Reporting";
            } else {
                throw new IllegalArgumentException("Please choose the reporting period type!");
            }
            String selectedPeriod = jComboBox1.getSelectedItem().toString();
            
            if(selectedPeriod.equals("Please pick a reporting period.") || selectedPeriod == null) {
                throw new IllegalArgumentException("Please pick a reporting period!");
            }
            int month = jMonthChooser1.getMonth() + 1;
            int year = jYearChooser1.getYear();

            boolean successful = save(projectName, companyName, accountingPeriod, selectedPeriod, month, year);
            
            if(successful) {
                setVisible(false);
                
            } else {
                jTextField2.requestFocus();
            }

            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButton1ActionPerformed
    private boolean save(String projectName, String companyName, String accountingPeriod, String selectedPeriod, int month, int year) {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/accountingcycle", "root", "123456789");
            String checkSql = "SELECT COUNT(*) FROM projects WHERE project_name = ?";
            PreparedStatement checkPs = conn.prepareStatement(checkSql);
            checkPs.setString(1, projectName);
            ResultSet rsCheck = checkPs.executeQuery();
            rsCheck.next();
            int count = rsCheck.getInt(1);
            rsCheck.close();
            checkPs.close();

            if (count > 0) {
                JOptionPane.showMessageDialog(null, "Project name '" + projectName + "' already exists! Please choose another project name.", "Duplicate Project", JOptionPane.WARNING_MESSAGE);
                return false;
            }
            String sqlProj = "INSERT INTO projects (project_name, is_saved) VALUES (?, FALSE)";
            PreparedStatement psProj = conn.prepareStatement(sqlProj, Statement.RETURN_GENERATED_KEYS);
            psProj.setString(1, projectName);

            int rows = psProj.executeUpdate();
            if (rows == 0) {
                throw new SQLException("Insert failed, no rows affected");
            }
            ResultSet rsGetKey = psProj.getGeneratedKeys();
            int projectId = -1;
            if (rsGetKey.next()) {
                projectId = rsGetKey.getInt(1);
            }
            psProj.close();
            rsGetKey.close();
            if (projectId == -1) {
                throw new SQLException("Failed to retreive project_id!");
            }
           
            je.setProjectId(projectId, false);
            System.out.println("Project key in initdetails class" + projectId);
            

            String sql = "INSERT INTO InitialDetails (project_id, companyName, accountingPeriod, reportingPeriod, monthStarted, yearStarted) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, projectId);
            ps.setString(2, companyName);
            ps.setString(3, accountingPeriod);
            ps.setString(4, selectedPeriod);
            ps.setInt(5, month);
            ps.setInt(6, year);

            int rows2 = ps.executeUpdate();
            if (rows2 == 0) {
                throw new SQLException("Saving is unsuccessful, please try again!");
            }
            ps.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR:" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Calendar Year");
        jComboBox1.addItem("Fiscal Year");
        
    }//GEN-LAST:event_button1ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Monthly");
        jComboBox1.addItem("Semi-Annual");
        jComboBox1.addItem("Quarterly");
    }//GEN-LAST:event_button3ActionPerformed

    private void jMonthChooser1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMonthChooser1MouseEntered
        // TODO add your handling code here:
        if (!timer.isRunning()) {
            timer.start();
        }
        jMonthChooser1.getParent().repaint();
    }//GEN-LAST:event_jMonthChooser1MouseEntered

    private void jMonthChooser1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMonthChooser1MouseExited
        // TODO add your handling code here:
        if (timer.isRunning()) {
            timer.stop();
        }
        jMonthChooser1.getParent().repaint();
    }//GEN-LAST:event_jMonthChooser1MouseExited

    private void jMonthChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jMonthChooser1PropertyChange
        // TODO add your handling code here:
        jMonthChooser1.getParent().revalidate();
        jMonthChooser1.getParent().repaint();
    }//GEN-LAST:event_jMonthChooser1PropertyChange

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed
    private void load(int selectedId){
        String sql = "SELECT p.project_name, i.companyName, i.accountingPeriod, i.reportingPeriod, "
               + "i.monthStarted, i.yearStarted "
               + "FROM projects p "
               + "JOIN InitialDetails i ON p.project_id = i.project_id "
               + "WHERE p.project_id = ?";

        try (Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/accountingcycle", "root", "123456789");
            PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setInt(1, selectedId);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                // Fill fields
                String projectName = rs.getString("project_name");
                String companyName = rs.getString("companyName");
                String period = rs.getString("accountingPeriod");
                String periodType = rs.getString("reportingPeriod");
                int month = rs.getInt("monthStarted");
                int year = rs.getInt("yearStarted");

                jTextField2.setText(projectName);   // Project Name
                jTextField1.setText(companyName);   // Company Name

                // Set accounting period radio buttons
                if ("Annual Reporting".equalsIgnoreCase(period)) {
                    button1.setSelected(true);
                } else if ("Interval Reporting".equalsIgnoreCase(period)) {
                    button3.setSelected(true);
                } 
                jComboBox1.addItem(periodType);
                jComboBox1.setSelectedItem(periodType);
                // Set month/year chooser
                jMonthChooser1.setMonth(month - 1); // JMonthChooser is 0-based
                jYearChooser1.setYear(year);

                // Update global project_id in JournalEntry
                this.project_key = selectedId;
                je.setProjectId(project_key, isLoad);

                System.out.println("Loaded project " + projectName + " (ID: " + selectedId + ")");
            } else {
                throw new SQLException("No data found for project_id " + selectedId);
            }

            rs.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                    "Error loading project details: " + e.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try {
        
            ProjectNamePicker picker = new ProjectNamePicker(this, true, -1);
            picker.setVisible(true);

            if (picker.getReturnStatus() == ProjectNamePicker.RET_OK) {
                int selectedId = picker.getSelectedProjectId();

                if (selectedId <= 0) {
                    throw new IllegalArgumentException("Invalid project selection!");
                } else {
                    isLoad = true;
                }

                
                System.out.println("Selected project_id: " + selectedId);
                load(selectedId);
                JOptionPane.showMessageDialog(null, "You have 3 second to make sure the project you've chosen is correct. Press Cancel if not.", "Warning!", JOptionPane.WARNING_MESSAGE);
                
                JPanel block = new JPanel();
                block.setOpaque(false);
                block.addMouseListener(new java.awt.event.MouseAdapter() {});
                block.addKeyListener(new java.awt.event.KeyAdapter() {});
                this.setGlassPane(block);
                block.setVisible(true);
                javax.swing.Timer timer = new javax.swing.Timer(3000, e -> {
                    int a = JOptionPane.showConfirmDialog(
                        this, 
                        "Proceed with this project?", 
                        "Selection", 
                        JOptionPane.OK_CANCEL_OPTION
                    );
                    if (a == JOptionPane.OK_OPTION) {
                        this.dispose();
                    } else {
                        block.setVisible(false);
                        this.toFront();
                        this.requestFocus();
                    }
                    ((javax.swing.Timer)e.getSource()).stop();  
                });
                timer.setRepeats(false);  
                timer.start();
                
            } else {
                // Cancel pressed
                JOptionPane.showMessageDialog(this, "No project selected.", 
                                            "Load Cancelled", 
                                            JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Invalid Selection", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error loading project: " + ex.getMessage(),
                                        "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if (bGroup1.getSelection() == null) {
                JOptionPane.showMessageDialog(null,
                        "Error: Please select reporting period!",
                        "Reporting Period Required",
                        JOptionPane.ERROR_MESSAGE);

                // Reset back to placeholder
                jComboBox1.setSelectedItem("Please pick reporting period");
            }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AskForAddDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AskForAddDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AskForAddDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AskForAddDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                AskForAddDetails dialogue = new AskForAddDetails(null, null);
                dialogue.setVisible(true);
                dialogue.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton button1;
    private javax.swing.JRadioButton button3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private com.toedter.calendar.JMonthChooser jMonthChooser1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
